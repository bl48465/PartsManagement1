// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PartsManagement.Models;

namespace PartsManagement.Migrations
{
    [DbContext(typeof(MyContext))]
    partial class MyContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PartsManagement.Models.DetajetDalese", b =>
                {
                    b.Property<int>("DetajetDaleseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cmimi")
                        .HasColumnType("float");

                    b.Property<int>("FaturaDaleseID")
                        .HasColumnType("int");

                    b.Property<int>("ProduktiID")
                        .HasColumnType("int");

                    b.Property<int>("Sasia")
                        .HasColumnType("int");

                    b.HasKey("DetajetDaleseID");

                    b.HasIndex("FaturaDaleseID")
                        .IsUnique();

                    b.HasIndex("ProduktiID")
                        .IsUnique();

                    b.ToTable("DetajetDalese");
                });

            modelBuilder.Entity("PartsManagement.Models.DetajetHyrese", b =>
                {
                    b.Property<int>("DetajetHyreseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<double>("Cmimi")
                        .HasColumnType("float");

                    b.Property<int>("FaturaHyreseID")
                        .HasColumnType("int");

                    b.Property<int>("ProduktiID")
                        .HasColumnType("int");

                    b.Property<int>("Sasia")
                        .HasColumnType("int");

                    b.HasKey("DetajetHyreseID");

                    b.HasIndex("FaturaHyreseID")
                        .IsUnique();

                    b.HasIndex("ProduktiID")
                        .IsUnique();

                    b.ToTable("DetajetHyrese");
                });

            modelBuilder.Entity("PartsManagement.Models.FaturaDalese", b =>
                {
                    b.Property<int>("FaturaDaleseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FaturaDaleseID");

                    b.ToTable("FaturaDalese");
                });

            modelBuilder.Entity("PartsManagement.Models.FaturaHyrese", b =>
                {
                    b.Property<int>("FaturaHyreseID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EmriFatures")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FaturaHyreseID");

                    b.ToTable("FaturaHyrese");
                });

            modelBuilder.Entity("PartsManagement.Models.Furnitori", b =>
                {
                    b.Property<int>("FurnitoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmriFurnitorit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("FaturimiFaturaHyreseID")
                        .HasColumnType("int");

                    b.HasKey("FurnitoriID");

                    b.HasIndex("FaturimiFaturaHyreseID");

                    b.ToTable("Furnitoret");
                });

            modelBuilder.Entity("PartsManagement.Models.Komenti", b =>
                {
                    b.Property<int>("KomentiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mesazhi")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulli")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("KomentiID");

                    b.HasIndex("UserID");

                    b.ToTable("Komentet");
                });

            modelBuilder.Entity("PartsManagement.Models.Marka", b =>
                {
                    b.Property<int>("MarkaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmriMarkes")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("MarkaID");

                    b.ToTable("Marka");

                    b.HasData(
                        new
                        {
                            MarkaID = 1,
                            EmriMarkes = "Ferrari"
                        },
                        new
                        {
                            MarkaID = 2,
                            EmriMarkes = "Audi"
                        },
                        new
                        {
                            MarkaID = 3,
                            EmriMarkes = "BMW"
                        },
                        new
                        {
                            MarkaID = 4,
                            EmriMarkes = "VolksWagen"
                        },
                        new
                        {
                            MarkaID = 5,
                            EmriMarkes = "Mercedes"
                        },
                        new
                        {
                            MarkaID = 6,
                            EmriMarkes = "Skoda"
                        },
                        new
                        {
                            MarkaID = 7,
                            EmriMarkes = "Volvo"
                        },
                        new
                        {
                            MarkaID = 8,
                            EmriMarkes = "Toyota"
                        },
                        new
                        {
                            MarkaID = 9,
                            EmriMarkes = "Mitsubishi"
                        },
                        new
                        {
                            MarkaID = 10,
                            EmriMarkes = "Porsche"
                        });
                });

            modelBuilder.Entity("PartsManagement.Models.Modeli", b =>
                {
                    b.Property<int>("ModeliID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmriModelit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MarkaID")
                        .HasColumnType("int");

                    b.HasKey("ModeliID");

                    b.HasIndex("MarkaID");

                    b.ToTable("Modeli");

                    b.HasData(
                        new
                        {
                            ModeliID = 1,
                            EmriModelit = "Ferrari Ri",
                            MarkaID = 1
                        },
                        new
                        {
                            ModeliID = 2,
                            EmriModelit = "Audi A3",
                            MarkaID = 2
                        },
                        new
                        {
                            ModeliID = 3,
                            EmriModelit = "BMW 5qe",
                            MarkaID = 3
                        },
                        new
                        {
                            ModeliID = 4,
                            EmriModelit = "Golf 4shi Bajramit",
                            MarkaID = 4
                        },
                        new
                        {
                            ModeliID = 5,
                            EmriModelit = "Mercedes e class",
                            MarkaID = 5
                        },
                        new
                        {
                            ModeliID = 6,
                            EmriModelit = "Skoda octavia",
                            MarkaID = 6
                        },
                        new
                        {
                            ModeliID = 7,
                            EmriModelit = "Volvo 3.0 tdi",
                            MarkaID = 7
                        },
                        new
                        {
                            ModeliID = 8,
                            EmriModelit = "Toyota off-road",
                            MarkaID = 8
                        },
                        new
                        {
                            ModeliID = 9,
                            EmriModelit = "Mitsubishi modeli 2t",
                            MarkaID = 9
                        },
                        new
                        {
                            ModeliID = 10,
                            EmriModelit = "Porsche panamera",
                            MarkaID = 10
                        });
                });

            modelBuilder.Entity("PartsManagement.Models.Porosia", b =>
                {
                    b.Property<int>("PorosiaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Sasia")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("PorosiaID");

                    b.HasIndex("UserID");

                    b.ToTable("Porosite");
                });

            modelBuilder.Entity("PartsManagement.Models.Produkti", b =>
                {
                    b.Property<int>("ProduktiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Emri")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ModeliID")
                        .HasColumnType("int");

                    b.Property<string>("OEnumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SektoriID")
                        .HasColumnType("int");

                    b.Property<string>("UpdatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ProduktiID");

                    b.HasIndex("ModeliID");

                    b.HasIndex("SektoriID");

                    b.ToTable("Produktet");
                });

            modelBuilder.Entity("PartsManagement.Models.Sektori", b =>
                {
                    b.Property<int>("SektoriID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("SektoriID");

                    b.HasIndex("UserID");

                    b.ToTable("Sektoret");
                });

            modelBuilder.Entity("PartsManagement.Models.Shitja", b =>
                {
                    b.Property<int>("ShitjaID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("FaturaDaleseID")
                        .HasColumnType("int");

                    b.Property<string>("Komenti")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ShitjaID");

                    b.HasIndex("FaturaDaleseID")
                        .IsUnique();

                    b.HasIndex("UserID");

                    b.ToTable("Shitjet");
                });

            modelBuilder.Entity("PartsManagement.Models.Shteti", b =>
                {
                    b.Property<int>("ShtetiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmriShtetit")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ShtetiID");

                    b.ToTable("Shteti");

                    b.HasData(
                        new
                        {
                            ShtetiID = 1,
                            EmriShtetit = "Kosovë"
                        },
                        new
                        {
                            ShtetiID = 2,
                            EmriShtetit = "Shqipëri"
                        },
                        new
                        {
                            ShtetiID = 3,
                            EmriShtetit = "Maqedoni"
                        });
                });

            modelBuilder.Entity("PartsManagement.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CreatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Emri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Kompania")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Mbiemri")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Roli")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UpdatedAt")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VendbanimiID")
                        .HasColumnType("int");

                    b.HasKey("UserID");

                    b.HasIndex("VendbanimiID");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("PartsManagement.Models.Vendbanimi", b =>
                {
                    b.Property<int>("VendbanimiID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EmriQytetit")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShtetiID")
                        .HasColumnType("int");

                    b.HasKey("VendbanimiID");

                    b.HasIndex("ShtetiID");

                    b.ToTable("Vendbanimi");

                    b.HasData(
                        new
                        {
                            VendbanimiID = 1,
                            EmriQytetit = "Artanë",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 2,
                            EmriQytetit = "Besianë",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 3,
                            EmriQytetit = "Burim",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 4,
                            EmriQytetit = "Dardanë",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 5,
                            EmriQytetit = "Decan",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 6,
                            EmriQytetit = "Dragash",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 7,
                            EmriQytetit = "Drenas",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 8,
                            EmriQytetit = "Ferizaj",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 9,
                            EmriQytetit = "Fushë Kosovë",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 10,
                            EmriQytetit = "Gjakovë",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 11,
                            EmriQytetit = "Gjilan",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 12,
                            EmriQytetit = "Kastriot",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 13,
                            EmriQytetit = "Kaqanik",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 14,
                            EmriQytetit = "Klinë",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 15,
                            EmriQytetit = "Leposaviq",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 16,
                            EmriQytetit = "Lipjan",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 17,
                            EmriQytetit = "Malishevë",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 18,
                            EmriQytetit = "Mitrovicë",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 19,
                            EmriQytetit = "Pejë",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 20,
                            EmriQytetit = "Prishtinë",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 21,
                            EmriQytetit = "Prizren",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 22,
                            EmriQytetit = "Rahovec",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 23,
                            EmriQytetit = "Skënderaj",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 24,
                            EmriQytetit = "Shtërpcë",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 25,
                            EmriQytetit = "Shtime",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 26,
                            EmriQytetit = "Therandë",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 27,
                            EmriQytetit = "Viti",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 28,
                            EmriQytetit = "Vushtrri",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 29,
                            EmriQytetit = "Zubin Potok",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 30,
                            EmriQytetit = "Zveqan",
                            ShtetiID = 1
                        },
                        new
                        {
                            VendbanimiID = 31,
                            EmriQytetit = "Berat",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 32,
                            EmriQytetit = "Bulqizë",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 33,
                            EmriQytetit = "Delvinë",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 34,
                            EmriQytetit = "Devoll",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 35,
                            EmriQytetit = "Dibër",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 36,
                            EmriQytetit = "Durrës",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 37,
                            EmriQytetit = "Elbasan",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 38,
                            EmriQytetit = "Fier",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 39,
                            EmriQytetit = "Gramsh",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 40,
                            EmriQytetit = "Gjirokastër",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 41,
                            EmriQytetit = "Has",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 42,
                            EmriQytetit = "Kavajë",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 43,
                            EmriQytetit = "Kolonjë",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 44,
                            EmriQytetit = "Korcë",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 45,
                            EmriQytetit = "Krujë",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 46,
                            EmriQytetit = "Kucovë",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 47,
                            EmriQytetit = "Kukës",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 48,
                            EmriQytetit = "Kurbin",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 49,
                            EmriQytetit = "Lezhë",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 50,
                            EmriQytetit = "Librazhd",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 51,
                            EmriQytetit = "Lushnjë",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 52,
                            EmriQytetit = "Malësi e madhe",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 53,
                            EmriQytetit = "Mallakastër",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 54,
                            EmriQytetit = "Mat",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 55,
                            EmriQytetit = "Mirditë",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 56,
                            EmriQytetit = "Peqin",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 57,
                            EmriQytetit = "Përmet",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 58,
                            EmriQytetit = "Pogradec",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 59,
                            EmriQytetit = "Pukë",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 60,
                            EmriQytetit = "Sarandë",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 61,
                            EmriQytetit = "Skrapar",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 62,
                            EmriQytetit = "Shkodër",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 63,
                            EmriQytetit = "Tepelenë",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 64,
                            EmriQytetit = "Tiranë",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 65,
                            EmriQytetit = "Tropojë",
                            ShtetiID = 2
                        },
                        new
                        {
                            VendbanimiID = 66,
                            EmriQytetit = "Vlorë",
                            ShtetiID = 2
                        });
                });

            modelBuilder.Entity("PartsManagement.Models.DetajetDalese", b =>
                {
                    b.HasOne("PartsManagement.Models.FaturaDalese", "FaturimiDales")
                        .WithOne("DetajetDalese")
                        .HasForeignKey("PartsManagement.Models.DetajetDalese", "FaturaDaleseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PartsManagement.Models.Produkti", "Prod")
                        .WithOne("DetajetDalese")
                        .HasForeignKey("PartsManagement.Models.DetajetDalese", "ProduktiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PartsManagement.Models.DetajetHyrese", b =>
                {
                    b.HasOne("PartsManagement.Models.FaturaHyrese", "Fatura")
                        .WithOne("Detajet")
                        .HasForeignKey("PartsManagement.Models.DetajetHyrese", "FaturaHyreseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PartsManagement.Models.Produkti", "Produkti")
                        .WithOne("DetajetHyrese")
                        .HasForeignKey("PartsManagement.Models.DetajetHyrese", "ProduktiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PartsManagement.Models.Furnitori", b =>
                {
                    b.HasOne("PartsManagement.Models.FaturaHyrese", "Faturimi")
                        .WithMany()
                        .HasForeignKey("FaturimiFaturaHyreseID");
                });

            modelBuilder.Entity("PartsManagement.Models.Komenti", b =>
                {
                    b.HasOne("PartsManagement.Models.User", "User")
                        .WithMany("Komentet")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("PartsManagement.Models.Modeli", b =>
                {
                    b.HasOne("PartsManagement.Models.Marka", "Marka")
                        .WithMany("Modelet")
                        .HasForeignKey("MarkaID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PartsManagement.Models.Porosia", b =>
                {
                    b.HasOne("PartsManagement.Models.User", "User")
                        .WithMany("Porosite")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("PartsManagement.Models.Produkti", b =>
                {
                    b.HasOne("PartsManagement.Models.Modeli", "Model")
                        .WithMany()
                        .HasForeignKey("ModeliID");

                    b.HasOne("PartsManagement.Models.Sektori", "Sektori")
                        .WithMany("Produktet")
                        .HasForeignKey("SektoriID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PartsManagement.Models.Sektori", b =>
                {
                    b.HasOne("PartsManagement.Models.User", "User")
                        .WithMany("Sektoret")
                        .HasForeignKey("UserID");
                });

            modelBuilder.Entity("PartsManagement.Models.Shitja", b =>
                {
                    b.HasOne("PartsManagement.Models.FaturaDalese", "FaturimiDales")
                        .WithOne("Shitja")
                        .HasForeignKey("PartsManagement.Models.Shitja", "FaturaDaleseID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PartsManagement.Models.User", "User")
                        .WithMany("Shitjet")
                        .HasForeignKey("UserID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PartsManagement.Models.User", b =>
                {
                    b.HasOne("PartsManagement.Models.Vendbanimi", "Vendbanimi")
                        .WithMany("Users")
                        .HasForeignKey("VendbanimiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("PartsManagement.Models.Vendbanimi", b =>
                {
                    b.HasOne("PartsManagement.Models.Shteti", "Shteti")
                        .WithMany("Qyteti")
                        .HasForeignKey("ShtetiID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
